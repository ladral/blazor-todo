@page "/"
@inherits Fluxor.Blazor.Web.Components.FluxorComponent
@using Fluxor
@using Bunit.Extensions

@inject IDispatcher _dispatcher
@inject Blazored.LocalStorage.ILocalStorageService localStorage;

<section class="hero is-primary">
  <div class="hero-body">
    <div class="container">
      <h1 class="title">
        TODO List
      </h1>
      <h2 class="subtitle">
        This is a blazor project to manage your tasks.
      </h2>
    </div>
  </div>
</section>

<div class="columns">
  <div class="column">
    <button @onclick="addTodo" class="button">Add</button>    
  </div>
  <div class="column">
    Second column
  </div>
</div>


 @if (todoItems != null)
 {
   @foreach (var todo in todoItems)
   {
     <TodoCard Title=@todo.title TodoNumber=@todo.id onRemoveTodo=@removeTodo/>
   }
 }   


@code {

  private List<Todo> todoItems;
  const string StorageKey = "todoItems";

  protected override async Task OnInitializedAsync()
  {
    await load();
  }

  private async Task load()
  {
    todoItems = await localStorage.GetItemAsync<List<Todo>>(StorageKey) ?? new();
  }

  async Task persist()
  {
    await localStorage.SetItemAsync(StorageKey, todoItems);
  }
  
  async Task addTodo()
  {
    Todo todo = new Todo(1, "Einkaufen");
    todoItems.Add(todo);
    Console.WriteLine(todo);
    persist();
  }
  
  async Task removeTodo(int id)
  {
    todoItems.RemoveAll(todo => todo.id == id);
    persist();
  }

}